{"name":"Onion","body":"# Statically typed object-oriented programming language Onion\r\n\r\nOnion is an object-oriented and statically typed programming language. Source\r\ncodes of Onion compiles into JVM class files (in memory / file).\r\n\r\nOriginally, Onion was written in Java.  Recently, It has been rewritten in Scala\r\ncompletely except Parser, using JavaCC.\r\n\r\n## Usage of tools\r\n### onionc\r\n  \r\n#### Usage:\r\n\r\n    onionc [options] source files...\r\n   \r\n###  Available options:\r\n+ classpath <classpath> Set classpath of source files in compilation.\r\n+ encoding <encoding> Set encoding of source files.\r\n+ -d <output directory> Set output directory of results.\r\n+ -maxErrorReports <error count> Set the maximum number of comiplation errors reported.\r\n\r\nOnionc compiles source files into class files in the directorys corresponding to module names\r\nof source files rooted by \"-d\" option.  If \"-d\" is not specified, the value of \"-d\" is specified as the current directory.\r\n\r\nFor example, if source files which module name is \"org.onion_lang\"\r\nis compiled, class files is generated in:\r\n  Unix-like OS : org/onion_lang\r\n  Windows: org\\onion_lang\r\n.\r\n    \r\n### onion\r\n    \r\n#### Usage:\r\n    onionc [options] source files... [command line arguments]\r\n    \r\n#### Available options¬ÅF\r\n+ -classpath <classpath> Set classpath of source files in compilation.\r\n+ -encoding <encoding> Set encoding of source files.\r\n+ -maxErrorReports <error count> Set the maximum number of comiplation errors reported.\r\n    \r\nOnionc compiles source files into in-memory classfiles and execute them.  The entry\r\npoint is:\r\n  If there is explicit class definitions and they have main methods,\r\n  The main method of the class on the top.  Otherwise, the first statement\r\n  in the toplevel is the entry point.\r\n    \r\n## Limitations\r\n\r\n+ Some compilation-time checks is not implemented  (e.g.\r\n  checking that abstract methods are implemented, checking that\r\n  final methods are not overriden).  It maybe that the code compiled\r\n  successfully will be rejected by class file verifier.\r\n+\tCurrently, qualitiy of onionc implementation is not high.  The comiler\r\n  crashes in some codes.  The source-codes in example directory is\r\n  compiled and executed property.\r\n+ There are some features that is supported partially.\r\n  For example, finally clause in try-catch is not supported yet.\r\n\r\nThis software includes softwares developed by \r\nApache Software Foundation (http://www.apache.org/).\r\n","tagline":"Onion - statically typed object-oriented programming language","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}